@page "/quiz"
@inject HttpClient Http

<PageTitle>JD Quiz</PageTitle>

<h1>JD Quiz</h1>

@if (!startQuiz) { <form @onsubmit="StartQuiz">
  <div class="mb-3">
    <label for="noOfQuestions" class="form-label">Number of Questions</label>
    <input value=@noOfQuestions @onchange="NoOfQuestionsChanged" min="5" max="30" type="number" class="form-control" id="noOfQuestions" aria-describedby="noOfQuestions">
  </div>
  <div class="mb-3">
    <label for="quizCategory" class="form-label">Quiz Category</label>
    <select class="form-select" id="quizCategory" @onchange="CategoryChanged">
    @if(QuizCategories == null)
    {
        <option value="0">Loading...</option>
    }
    else
    {
        @foreach (var category in QuizCategories)
        {
            <option value="@category.Id">@category.Name</option>
        }
    }
    </select>
  </div>
  <button type="submit" class="btn btn-primary">Submit</button>
</form> } else { <Quizbox QuestionNumber="@noOfQuestions" Category="@selectedCategory" /> }

@code {
    
        protected override async Task OnInitializedAsync()
    
        {
            try {
                var response = await Http!.GetFromJsonAsync<TriviaCategories>("https://opentdb.com/api_category.php");

                //Console.WriteLine("response: " + response.trivia_categories[0].Name);
        
                //var quizCategories = response.Select(x => new QuizCategory { Id = x.Id, Name = x.Name }).ToList();
                var quizCategories = response?.trivia_categories;

                //Console.WriteLine("quizCategories: " + quizCategories[0].Name);

                quizCategories?.Insert(0, new QuizCategory { Id = 0, Name = "Any Category" });
        
                QuizCategories = quizCategories;
            }
            catch (Exception ex)
            {
                Console.WriteLine("Error: " + ex.Message);
            }
    
        }

        private bool startQuiz = false;

        private int noOfQuestions = 10;

        private QuizCategory selectedCategory = new QuizCategory { Id = 0, Name = "Any Category" };

        private void CategoryChanged(ChangeEventArgs e)
        {
            selectedCategory = QuizCategories!.FirstOrDefault(x => x.Id == int.Parse(e.Value!.ToString()!))!;
        }

        private void NoOfQuestionsChanged(ChangeEventArgs e)
        {
            noOfQuestions = int.Parse(e.Value!.ToString()!);
        }

        private void StartQuiz()
        {
            startQuiz = true;
        }
    
        public List<QuizCategory>? QuizCategories { get; set; }
        public class TriviaCategories
        {
            public List<QuizCategory>? trivia_categories { get; set; }
        }
        public class QuizCategory
        {
            public int Id { get; set; }
            public string? Name { get; set; }
        }
    
}